pipeline {
  agent any

  environment {
    NPM_CONFIG_CACHE = "${WORKSPACE}/.npm"
    CI = false
  }

  tools {
    nodejs 'NodeJS 20.11.0'
  }

  stages {
    stage ('frontend build') {
      steps {
        withCredentials([file(credentialsId: 'front_profile', variable: 'FRONTEND_ENV')]) {
          sh 'cd exec/ && chmod +x project-build-frontend.sh && ./project-build-frontend.sh'
        }
      }
    }

    stage ('frontend deploy') {
      steps([$class: 'BapSshPromotionPublisherPlugin']) {
        sshPublisher(
          continueOnError: false,
          failOnError: true,
          publishers: [
            sshPublisherDesc(
              configName: 'application', 
              verbose: true,
              transfers: [
                // sshTransfer(
                //     execCommand: 'rm -r /home/ubuntu/nginx/dist/*'
                // ),
                sshTransfer(
                    sourceFiles: 'frontend/dist/**',
                    removePrefix: 'frontend/dist/',
                    // remote의 경우에는 system의 remote directory가 앞에 prefix로 붙음
                    // 그냥 공백으로 둬서 절대경로 그대로 쓸 수 있도록 했음
                    remoteDirectory: '/ubuntu/nginx/dist',
					          execCommand: 'pwd'
                ),
                sshTransfer(
                    sourceFiles: 'exec/deploy-frontend/*',
                    removePrefix: 'exec/deploy-frontend/',
                    remoteDirectory: '/ubuntu/deploy/S10P22D102/exec',
                    execCommand: 'cd /home/ubuntu/deploy/S10P22D102/exec && chmod 755 *.sh; \
                                  ./stop-frontend.sh; \
                                  ./start-frontend.sh'
                )
              ]
            )
          ]
        )
      }
    }
  }
}